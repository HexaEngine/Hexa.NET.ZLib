// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ZLib
{
	/// <summary>
	/// gzgetc() macro and its supporting function and exposed data structure.  Note<br/>
	/// that the real internal state is much larger than the exposed structure.<br/>
	/// This abbreviated structure exposes just enough for the gzgetc() macro.  The<br/>
	/// user should not mess with these exposed elements, since their names or<br/>
	/// behavior could change in the future, perhaps even capriciously.  They can<br/>
	/// only be used by the gzgetc() macro.  You have been warned.<br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct GZFile
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		public uint Have;

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe byte* Next;

		/// <summary>
		/// To be documented.
		/// </summary>
		public long Pos;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe GZFile(uint have = default, byte* next = default, long pos = default)
		{
			Have = have;
			Next = next;
			Pos = pos;
		}


	}

}
